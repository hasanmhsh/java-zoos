
#Enable postgres vvv


# Configurations useful for working with H2
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console
#
# We set a port that is not frequently used
server.port=${PORT:2019}
#
# Feature that determines what happens when no accessors are found for a type
# (and there are no annotations to indicate it is meant to be serialized).
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
#
# keeps a transaction inside of the same entity manager
# This property register an EntityManager to the current thread,
# so you will have the same EntityManager until the web request is finished.
spring.jpa.open-in-view=true
#
# What do with the schema
# drop n create table again, good for testing
#spring.datasource.initialization-mode=always
#spring.datasource.initialize=true(deprecated)
#spring.jpa.hibernate.ddl-auto=create
# spring.datasource.initialization-mode=always
#
# Good for production!
# Hasan note that "update" create tables if not exist and doesnt affect tables if it is already exist, while "create" drop all tables and recreate it again
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.ddl-auto=create
# since we have our data in SeedData, do not also load it from data.sql
#spring.datasource.initialization-mode=never

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

spring.jpa.hibernate.show-sql=true
spring.datasource.url=jdbc:postgresql://localhost:5432/javazoos?currentSchema=jz
spring.datasource.username=postgres
spring.datasource.password=postgres
#spring.datasource.initialization-mode=always
#spring.datasource.initialize=true
#This is sql alternative to seed data this file inside resources folder
#spring.datasource.schema=classpath:/schema.sql
# must set to null with definined schema.sql
spring.jpa.hibernate.ddl-auto=none
spring.datasource.continue-on-error=true



#Enable h2 vvv

## Configurations useful for working with H2
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console
##
## We set a port that is not frequently used
#server.port=${PORT:2019}
#spring.datasource.url=jdbc:h2:mem:testdb
##
## Feature that determines what happens when no accessors are found for a type
## (and there are no annotations to indicate it is meant to be serialized).
#spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
##
## keeps a transaction inside of the same entity manager
## This property register an EntityManager to the current thread,
## so you will have the same EntityManager until the web request is finished.
#spring.jpa.open-in-view=true
##
## What do with the schema
## drop n create table again, good for testing
#spring.jpa.hibernate.ddl-auto=create
#spring.datasource.initialization-mode=always
##
## Good for production!
## spring.jpa.hibernate.ddl-auto=update
## since we have our data in SeedData, do not also load it from data.sql
## spring.datasource.initialization-mode=never
##
## Used to set the date format for JSON Output
#spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
#spring.jackson.time-zone=America/Los_Angeles
##
## Turns off Spring Boot automatic exception handling
#server.error.whitelabel.enabled=false
#spring.mvc.throw-exception-if-no-handler-found=true
#spring.resources.add-mappings=false




#flyway.enabled=false

#spring.reactor.debug-agent.enabled=true








#Settings for liquibase managed db project
#
##spring.datasource.url: jdbc:mysql://localhost:3306/crossride?createDatabaseIfNotExist=true&useSSL=false
#spring.datasource.url=jdbc:postgresql://localhost:5432/javazoos?currentSchema=jz
#spring.datasource.username=postgres
#spring.datasource.password=postgres
##spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#
#spring.jpa.hibernate.ddl-auto=none
#
##spring.liquibase.change-log=classpath:/db/changelog/db.changelog-master.xml
##spring.liquibase.change-log=classpath:/db/changelog/db.changelog-master.xml
#spring.data.rest.base-path=/api
##spring.liquibase.enabled=false